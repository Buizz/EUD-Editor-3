import TriggerEditor.SCArchive as sca;


const s = StringBuffer();


const loadfunc = PVariable();
const loadstatus = PVariable();
const loadslot = PVariable();

const savefunc = PVariable();
const savestatus = PVariable();
const saveslot = PVariable();

const loadglobalfunc = PVariable();
const loadglobalstatus = PVariable();

const loadTimefunc = PVariable();
const loadTimestatus = PVariable();

function Exec(){
	foreach(cp : EUDLoopPlayer("Human",None,None)){
		setcurpl(cp);
		sca.Exec();
		
		//연결 됨
		if (sca.ConnectStatus() == 1){
			
			//로드 진행
			if (loadstatus[cp] == 1){
				if(sca.GetLastMessage() == 4){
					loadstatus[cp] = 0;
					const p = EUDFuncPtr(1,0)(loadfunc[cp]);
					p(cp);
					sca.ResetLastMessage();
				}else{
					if (sca.CommandStatus() == 0){
						sca.LoadData(loadslot[cp]);
					}
				}
			}else if (savestatus[cp] == 1){
				if(sca.GetLastMessage() == 6){
					savestatus[cp] = 0;
					const p = EUDFuncPtr(1,0)(savefunc[cp]);
					p(cp);
					sca.ResetLastMessage();
				}else{
					if (sca.CommandStatus() == 0){
						sca.SaveData(saveslot[cp]);
					}
				}
			}else if (loadglobalstatus[cp] == 1){
				if(sca.GetGlobalDataLoadMessage() == 1){
					loadglobalstatus[cp] = 0;
					const p = EUDFuncPtr(1,0)(loadglobalfunc[cp]);
					p(cp);
					sca.ResetGlobalDataLoadMessage();
				}else{
					if (sca.CommandStatus() == 0){
						sca.LoadGlobalData();
					}
				}
			}else if (loadTimestatus[cp] == 1){
				if(sca.GetTimeLoadMessage() == 1){
					loadTimestatus[cp] = 0;
					const p = EUDFuncPtr(1,0)(loadTimefunc[cp]);
					p(cp);
					sca.ResetDateTimeMessage();
				}else{
					if (sca.CommandStatus() == 0){
						sca.LoadTime();
					}
				}
			}
			
			
			
		}
	
	}
}

function scaLoad(slot, cmpfunc : EUDFuncPtr(1, 0)){
	const cp = getcurpl();
	loadfunc[cp] = cmpfunc;
	loadstatus[cp] = 1;
	loadslot[cp] = slot;
}

function scaSave(slot, cmpfunc : EUDFuncPtr(1, 0)){
	const cp = getcurpl();
	savefunc[cp] = cmpfunc;
	savestatus[cp] = 1;
	saveslot[cp] = slot;
}

function scaLoadGlobal(cmpfunc : EUDFuncPtr(1, 0)){
	const cp = getcurpl();
	loadglobalfunc[cp] = cmpfunc;
	loadglobalstatus[cp] = 1;
}

function scaLoadTime(cmpfunc : EUDFuncPtr(1, 0)){
	const cp = getcurpl();
	loadTimefunc[cp] = cmpfunc;
	loadTimestatus[cp] = 1;
}

function SetUseDefaultMessage(value){
	//value가 1이면 기본값쓰기
	sca.SetUseDefaultMessage(value);
}

function Year(){
	return sca.Year;
}

function Month(){
	return sca.Month;
}

function Day(){
	return sca.Day;
}

function Hour(){
	return sca.Hour;
}

function Min(){
	return sca.Min;
}

function Week(){
	return sca.Week;
}

function GlobalData(index){
	return sca.GlobalData[index];
}